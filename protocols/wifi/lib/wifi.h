////////////////////////////////////////////////////////////////////////////////
// COPYRIGHT (c) 2023
// NOMNIO d.o.o.
// All rights reserved.
////////////////////////////////////////////////////////////////////////////////
/**
 *	@file		wifi.h
 *	@author   	Tibor Sovilj
 *	@date		12.10.2023
 *	@version	V0.0.1

 *	@brief 		Header file for the WiFi protocol.
 */
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/**
 *	@addtogroup WIFI_API
 *	@{ <!-- BEGIN GROUP -->
 */
////////////////////////////////////////////////////////////////////////////////
#ifndef __WIFI_MODULE_H
#define __WIFI_MODULE_H

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include "esp_netif.h"
#include "esp_wifi_types.h"
#include "freertos/FreeRTOS.h"

////////////////////////////////////////////////////////////////////////////////
// API Definitions
////////////////////////////////////////////////////////////////////////////////
#define WIFI_MAX_SSID_LENGTH        ( 32 )              // IEEE standard maximum
#define WIFI_MAX_PASSWORD_LENGTH    ( 64 )              // IEEE standard maximum
#define WIFI_MIN_PASSWORD_LENGTH    ( 8 )               // Less than that causes runtime errors

////////////////////////////////////////////////////////////////////////////////
// API Typedefs
////////////////////////////////////////////////////////////////////////////////
/**
 *  Message enums for the WiFi application task
 */
typedef enum
{
    eWIFI_APP_MSG_START_HTTP_SERVER = 0,
    eWIFI_APP_MSG_CONNECTING_FROM_HTTP_SERVER,
    eWIFI_APP_MSG_STA_CONNECTED_GOT_IP,

    eWIFI_APP_MSG_NUM_OF
} wifi_app_message_e;

/**
 *  Structure for the message queue
 */
typedef struct wifi_app_queue_message_s
{
    wifi_app_message_e  msgID;
    char*               msgContent;
};

/**
 *  Structure for event messages.
 */
typedef struct wifi_app_events_log_s
{
    char* eventMsg;
};

////////////////////////////////////////////////////////////////////////////////
// API Variables
////////////////////////////////////////////////////////////////////////////////
extern esp_netif_t *esp_netif_sta;
extern esp_netif_t *esp_netif_ap;

////////////////////////////////////////////////////////////////////////////////
// API Function Prototypes
////////////////////////////////////////////////////////////////////////////////
void wifi_app_start(void);
BaseType_t wifi_app_send_message(wifi_app_message_e msgID);

#endif /* __WIFI_MODULE_H */

////////////////////////////////////////////////////////////////////////////////
/**
 *	@} <!-- END GROUP -->
 */
///////////////////////////////////////////////////////////////////////////////